import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { ethers } from 'ethers';

const PoliceContractAddress = "0x905AdE0F6CDbae009034293DAFBee66690aF6B98";

const PoliceContract = [{
    "_format": "hh-sol-artifact-1",
    "contractName": "PoliceContract",
    "sourceName": "contracts/PoliceContract.sol",
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "caseId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "officer",
            "type": "address"
          }
        ],
        "name": "FIRRegistered",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "firCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "firs",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "caseId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "officer",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "registered",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_caseId",
            "type": "uint256"
          }
        ],
        "name": "registerFIR",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x60806040526000805534801561001457600080fd5b50610452806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a24aa21b14610046578063a4de172d14610062578063d1c45a9214610095575b600080fd5b610060600480360381019061005b9190610276565b6100b3565b005b61007c60048036038101906100779190610276565b6101d8565b60405161008c949392919061030e565b60405180910390f35b61009d610235565b6040516100aa9190610353565b60405180910390f35b6000808154809291906100c59061039d565b9190505550604051806080016040528060005481526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506001600080548152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050507fd271e1f76cd3c390187d3f99295b9052246fb3b61f86ef2b7c2cfa3304c5ff3860005482336040516101cd939291906103e5565b60405180910390a150565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60005481565b600080fd5b6000819050919050565b61025381610240565b811461025e57600080fd5b50565b6000813590506102708161024a565b92915050565b60006020828403121561028c5761028b61023b565b5b600061029a84828501610261565b91505092915050565b6102ac81610240565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102dd826102b2565b9050919050565b6102ed816102d2565b82525050565b60008115159050919050565b610308816102f3565b82525050565b600060808201905061032360008301876102a3565b61033060208301866102a3565b61033d60408301856102e4565b61034a60608301846102ff565b95945050505050565b600060208201905061036860008301846102a3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a882610240565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103da576103d961036e565b5b600182019050919050565b60006060820190506103fa60008301866102a3565b61040760208301856102a3565b61041460408301846102e4565b94935050505056fea2646970667358221220c7d3a995268f4d3383719ad17910ff03c7481b315ac72f8f0369e729c915852764736f6c63430008180033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063a24aa21b14610046578063a4de172d14610062578063d1c45a9214610095575b600080fd5b610060600480360381019061005b9190610276565b6100b3565b005b61007c60048036038101906100779190610276565b6101d8565b60405161008c949392919061030e565b60405180910390f35b61009d610235565b6040516100aa9190610353565b60405180910390f35b6000808154809291906100c59061039d565b9190505550604051806080016040528060005481526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506001600080548152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050507fd271e1f76cd3c390187d3f99295b9052246fb3b61f86ef2b7c2cfa3304c5ff3860005482336040516101cd939291906103e5565b60405180910390a150565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60005481565b600080fd5b6000819050919050565b61025381610240565b811461025e57600080fd5b50565b6000813590506102708161024a565b92915050565b60006020828403121561028c5761028b61023b565b5b600061029a84828501610261565b91505092915050565b6102ac81610240565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102dd826102b2565b9050919050565b6102ed816102d2565b82525050565b60008115159050919050565b610308816102f3565b82525050565b600060808201905061032360008301876102a3565b61033060208301866102a3565b61033d60408301856102e4565b61034a60608301846102ff565b95945050505050565b600060208201905061036860008301846102a3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a882610240565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103da576103d961036e565b5b600182019050919050565b60006060820190506103fa60008301866102a3565b61040760208301856102a3565b61041460408301846102e4565b94935050505056fea2646970667358221220c7d3a995268f4d3383719ad17910ff03c7481b315ac72f8f0369e729c915852764736f6c63430008180033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  ];
  const Dashboard = () => {
    const [cases, setCases] = useState([]);
  
    useEffect(() => {
      const fetchCases = async () => {
        const result = await axios.get('http://localhost:5000/cases');
        setCases(result.data);
      };
      fetchCases();
    }, []);
  
    const registerFIR = async (caseId) => {
      if (typeof window.ethereum !== 'undefined') {
        const provider = new ethers.BrowserProvider(window.ethereum);
        await provider.send('eth_requestAccounts', []);
        const signer = provider.getSigner();
        const contract = new ethers.Contract(PoliceContractAddress, PoliceContractABI, signer);
        const transaction = await contract.registerFIR(caseId);
        await transaction.wait();
      }
    };
  
    return (
      <div>
        <h2>Police Dashboard</h2>
        {cases.map((caseData, index) => (
          <div key={index}>
            <p>{caseData.details}</p>
            <button onClick={() => registerFIR(caseData.id)}>Register FIR</button>
          </div>
        ))}
      </div>
    );
  };
  
  export default Dashboard;
